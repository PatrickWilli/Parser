/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parser;


import parser.util.WriteToFile;
import parser.util.Buffer;
import parser.util.FormatDetector;
import parser.xml.XMLtoJSON;
import parser.json.JSONtoXML;
import java.util.List;
import parser.database.LoadtoDB;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import parser.database.ConnectionTester;
import parser.database.DBCredentials;
import parser.database.ReadFromDB;

/**
 *
 * @author phamm
 */
public class GUI extends javax.swing.JFrame
{

    /**
     * Creates new form GUI
     */
    public GUI()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        path_or_url = new javax.swing.JLabel();
        load_data_startbutton = new javax.swing.JButton();
        path_or_url_textfield = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        json_parse_from_radio_button = new javax.swing.JRadioButton();
        xml_parse_from_radio_button = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        json_parse_to_radio_button = new javax.swing.JRadioButton();
        xml_parse_to_radio_button = new javax.swing.JRadioButton();
        parseTab_start_button = new javax.swing.JButton();
        write_to_file_textfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        write_to_file_button = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        db_csvpreview_textarea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        db_loadtodb_button = new javax.swing.JButton();
        db_description_textfield = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        fetchfromdb_listtables_button = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        fetchfromdb_textarea = new javax.swing.JTextArea();
        fetchfromdb_tablename_textfield = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        fetchfromdb_fetchdatafromtable_button = new javax.swing.JButton();
        dbcredentials_panel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dbcredentials_host_textfield = new javax.swing.JTextField();
        dbcredentials_port_textfield = new javax.swing.JTextField();
        dbcredentials_database_textfield = new javax.swing.JTextField();
        dbcredentials_username_textfield = new javax.swing.JTextField();
        dbcredentials_password_textfield = new javax.swing.JTextField();
        dbcredentials_setcredentials_button = new javax.swing.JButton();
        dbcredentials_testconnection_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("mainfraim"); // NOI18N

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                jTabbedPane1StateChanged(evt);
            }
        });

        path_or_url.setText("Path or URL");

        load_data_startbutton.setText("Load Data");
        load_data_startbutton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                load_data_startbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 403, Short.MAX_VALUE)
                        .addComponent(load_data_startbutton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(path_or_url)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(path_or_url_textfield))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(path_or_url)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(path_or_url_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 301, Short.MAX_VALUE)
                .addComponent(load_data_startbutton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Load Data", jPanel1);

        jLabel1.setText("Parse from...");

        json_parse_from_radio_button.setText("JSON");

        xml_parse_from_radio_button.setText("XML");

        jLabel2.setText("Parse to...");

        json_parse_to_radio_button.setText("JSON");

        xml_parse_to_radio_button.setText("XML");

        parseTab_start_button.setText("Start Parsing");
        parseTab_start_button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                parseTab_start_buttonActionPerformed(evt);
            }
        });

        jLabel3.setText("Write to File:");

        write_to_file_button.setText("...");
        write_to_file_button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                write_to_file_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(parseTab_start_button))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(json_parse_from_radio_button)
                                .addGap(18, 18, 18)
                                .addComponent(xml_parse_from_radio_button, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(json_parse_to_radio_button)
                                .addGap(18, 18, 18)
                                .addComponent(xml_parse_to_radio_button))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(write_to_file_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(write_to_file_button, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(json_parse_from_radio_button)
                    .addComponent(xml_parse_from_radio_button))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(json_parse_to_radio_button)
                    .addComponent(xml_parse_to_radio_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(write_to_file_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(write_to_file_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 177, Short.MAX_VALUE)
                .addComponent(parseTab_start_button)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Parse", jPanel2);

        jPanel4.setToolTipText("");

        db_csvpreview_textarea.setEditable(false);
        db_csvpreview_textarea.setColumns(20);
        db_csvpreview_textarea.setRows(5);
        jScrollPane1.setViewportView(db_csvpreview_textarea);

        jLabel6.setText("CSV Preview");

        db_loadtodb_button.setText("Load into DB");
        db_loadtodb_button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                db_loadtodb_buttonActionPerformed(evt);
            }
        });

        jLabel10.setText("Description");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(db_description_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(db_loadtodb_button))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(db_description_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(db_loadtodb_button)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("CSV to DB", jPanel4);

        fetchfromdb_listtables_button.setText("List Tables");
        fetchfromdb_listtables_button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fetchfromdb_listtables_buttonActionPerformed(evt);
            }
        });

        fetchfromdb_textarea.setColumns(20);
        fetchfromdb_textarea.setRows(5);
        jScrollPane3.setViewportView(fetchfromdb_textarea);

        jLabel11.setText("Tablename for fetching Data");

        fetchfromdb_fetchdatafromtable_button.setText("Fetch Data From Table");
        fetchfromdb_fetchdatafromtable_button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fetchfromdb_fetchdatafromtable_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fetchfromdb_tablename_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fetchfromdb_listtables_button)
                            .addComponent(fetchfromdb_fetchdatafromtable_button))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(4, 4, 4)
                        .addComponent(fetchfromdb_tablename_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(fetchfromdb_listtables_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fetchfromdb_fetchdatafromtable_button)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fetch from DB", jPanel5);

        jLabel4.setText("Host");

        jLabel5.setText("Port");

        jLabel7.setText("Database");

        jLabel8.setText("Username");

        jLabel9.setText("Password");

        dbcredentials_setcredentials_button.setText("Set Credentials");
        dbcredentials_setcredentials_button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                dbcredentials_setcredentials_buttonActionPerformed(evt);
            }
        });

        dbcredentials_testconnection_button.setEnabled(false);
        dbcredentials_testconnection_button.setText("Test Connection");
        dbcredentials_testconnection_button.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                dbcredentials_testconnection_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dbcredentials_panelLayout = new javax.swing.GroupLayout(dbcredentials_panel);
        dbcredentials_panel.setLayout(dbcredentials_panelLayout);
        dbcredentials_panelLayout.setHorizontalGroup(
            dbcredentials_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbcredentials_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dbcredentials_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(dbcredentials_host_textfield)
                    .addComponent(dbcredentials_port_textfield)
                    .addComponent(dbcredentials_database_textfield)
                    .addComponent(dbcredentials_username_textfield)
                    .addComponent(dbcredentials_password_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dbcredentials_panelLayout.createSequentialGroup()
                .addContainerGap(251, Short.MAX_VALUE)
                .addComponent(dbcredentials_testconnection_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbcredentials_setcredentials_button)
                .addContainerGap())
        );
        dbcredentials_panelLayout.setVerticalGroup(
            dbcredentials_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dbcredentials_panelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbcredentials_host_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbcredentials_port_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbcredentials_database_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbcredentials_username_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbcredentials_password_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(dbcredentials_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dbcredentials_setcredentials_button)
                    .addComponent(dbcredentials_testconnection_button))
                .addContainerGap())
        );

        jTabbedPane1.addTab("DB Credentials", dbcredentials_panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void load_data_startbuttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_load_data_startbuttonActionPerformed
    {//GEN-HEADEREND:event_load_data_startbuttonActionPerformed
       
        if(path_or_url_textfield.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter an valid path!");
            return;
        }
        Main.start(path_or_url_textfield.getText().trim());
    }//GEN-LAST:event_load_data_startbuttonActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_jTabbedPane1StateChanged
    {//GEN-HEADEREND:event_jTabbedPane1StateChanged
        if(jTabbedPane1.getSelectedIndex() == 1)
        {
             if(Buffer.getBufferedString() == null)
             {
                  JOptionPane.showMessageDialog(null, "Please Load some data first!");
                  jTabbedPane1.setSelectedIndex(0);
                  return;
             }
             else
             {
                 if(FormatDetector.getFileFormat().equals("csv"))
                 {
                     JOptionPane.showMessageDialog(null, "Cannot Parse CSV to JSON/XML. Switching to CSV to DB tab");
                     jTabbedPane1.setSelectedIndex(2);
                     return;
                 }
                 if(FormatDetector.getFileFormat().equals("json"))
                  {
                      json_parse_from_radio_button.doClick();
                      xml_parse_to_radio_button.doClick();
                  }
                 else if (FormatDetector.getFileFormat().equals("xml"))
                 {
                     xml_parse_from_radio_button.doClick();
                     json_parse_to_radio_button.doClick();
                 }
             }
        }
        if(jTabbedPane1.getSelectedIndex() == 2)
        {
            if(Buffer.getBufferedString() == null)
            {
                JOptionPane.showMessageDialog(null, "Please Load some data first!");
                jTabbedPane1.setSelectedIndex(0);
                return;
            }
            if(!FormatDetector.getFileFormat().equals("csv"))
            {
                JOptionPane.showMessageDialog(null, "File Format is not CSV. Switching to Parsing tab.");
                jTabbedPane1.setSelectedIndex(1);
                return;
            }
            if(DBCredentials.HOST == null || DBCredentials.PORT == null || DBCredentials.DATABASE == null || DBCredentials.USERNAME == null)
            {
                JOptionPane.showMessageDialog(null, "Please provide Database Credentials first\nSwithcing to DB Credentials Tab");
                jTabbedPane1.setSelectedIndex(4);
                return;
            }
            
            db_csvpreview_textarea.setText(Buffer.getBufferedString());
            
        }
        if(jTabbedPane1.getSelectedIndex() == 3)
        {
            if(DBCredentials.HOST == null || DBCredentials.PORT == null || DBCredentials.DATABASE == null || DBCredentials.USERNAME == null)
            {
                JOptionPane.showMessageDialog(null, "Please provide Database Credentials first\nSwithcing to DB Credentials Tab");
                jTabbedPane1.setSelectedIndex(4);
                return;
            }
        }
        
       
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void parseTab_start_buttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_parseTab_start_buttonActionPerformed
    {//GEN-HEADEREND:event_parseTab_start_buttonActionPerformed
        if(json_parse_from_radio_button.isSelected() && xml_parse_to_radio_button.isSelected())
        {
            if(write_to_file_textfield.getText().trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Please select a file to write first");
                return;
            }
            if(Buffer.getJSONObjects() == null)
            {
                JOptionPane.showMessageDialog(null, "No JSON data found");
                return;
            }
            
            JSONtoXML jsontoxml = new JSONtoXML(Buffer.getJSONObjects());
            jsontoxml.convert();
            WriteToFile wtf = new WriteToFile(write_to_file_textfield.getText(), jsontoxml.getConvertedString());
            
            if(wtf.writeToFile())
            {
                JOptionPane.showMessageDialog(null, "Successfully wrote to File!");
            }
            else
            {
               JOptionPane.showMessageDialog(null, "Problems writing to file"); 
            }

        }
        if(xml_parse_from_radio_button.isSelected() && json_parse_to_radio_button.isSelected())
        {
            if(write_to_file_textfield.getText().trim().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Please select a file to write first");
                return;
            }
            if(Buffer.getXMLstring() == null)
            {
                JOptionPane.showMessageDialog(null, "No XML data found");
                return;
            }
            
            XMLtoJSON xmltojson = new XMLtoJSON(Buffer.getXMLstring());
            xmltojson.convert();
            WriteToFile wtf = new WriteToFile(write_to_file_textfield.getText(), xmltojson.getConvertedString());
            
            if(wtf.writeToFile())
            {
                JOptionPane.showMessageDialog(null, "Successfully wrote to File!");
            }
            else
            {
               JOptionPane.showMessageDialog(null, "Problems writing to file"); 
            }
            
        }
        
    }//GEN-LAST:event_parseTab_start_buttonActionPerformed

    private void write_to_file_buttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_write_to_file_buttonActionPerformed
    {//GEN-HEADEREND:event_write_to_file_buttonActionPerformed
        JFileChooser chooser = new JFileChooser();
        //chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int closeoption = chooser.showOpenDialog(null);
        if(closeoption == JFileChooser.APPROVE_OPTION)
        {
            write_to_file_textfield.setText(chooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_write_to_file_buttonActionPerformed

    private void db_loadtodb_buttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_db_loadtodb_buttonActionPerformed
    {//GEN-HEADEREND:event_db_loadtodb_buttonActionPerformed
        if(db_description_textfield.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a description");
            return;
        }
        String description = db_description_textfield.getText().trim();
        LoadtoDB loadtodb = new LoadtoDB(DBCredentials.HOST, DBCredentials.PORT, DBCredentials.DATABASE, DBCredentials.USERNAME, DBCredentials.PASSWORD, description);
        if(loadtodb.persist())
        {
            JOptionPane.showMessageDialog(null, "Successfully load to DB!");
        }
    }//GEN-LAST:event_db_loadtodb_buttonActionPerformed

    private void fetchfromdb_listtables_buttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fetchfromdb_listtables_buttonActionPerformed
    {//GEN-HEADEREND:event_fetchfromdb_listtables_buttonActionPerformed
       ReadFromDB readfromdb = new ReadFromDB(DBCredentials.HOST, DBCredentials.PORT, DBCredentials.DATABASE, DBCredentials.USERNAME, DBCredentials.PASSWORD);
       List<Object> tables = readfromdb.gettables();
       readfromdb.closeconnection();
       fetchfromdb_textarea.setText("TABLES:\n\n");
       for (int i = 0; i < tables.size(); i++)
       {
           fetchfromdb_textarea.setText(fetchfromdb_textarea.getText() + tables.get(i) + "\n");
       }
    }//GEN-LAST:event_fetchfromdb_listtables_buttonActionPerformed

    private void dbcredentials_setcredentials_buttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_dbcredentials_setcredentials_buttonActionPerformed
    {//GEN-HEADEREND:event_dbcredentials_setcredentials_buttonActionPerformed
        if(dbcredentials_host_textfield.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a host");
            return;
        }
        else if(dbcredentials_port_textfield.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a port");
            return;
        }
        else if(dbcredentials_database_textfield.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a database");
            return;
        }
        else if(dbcredentials_username_textfield.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter a username");
            return;
        }
         DBCredentials.HOST = dbcredentials_host_textfield.getText().trim();
         DBCredentials.PORT = dbcredentials_port_textfield.getText().trim();
         DBCredentials.DATABASE = dbcredentials_database_textfield.getText().trim();
         DBCredentials.USERNAME = dbcredentials_username_textfield.getText().trim();
         DBCredentials.PASSWORD = dbcredentials_password_textfield.getText().trim();
         dbcredentials_testconnection_button.setEnabled(true);
    }//GEN-LAST:event_dbcredentials_setcredentials_buttonActionPerformed

    private void dbcredentials_testconnection_buttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_dbcredentials_testconnection_buttonActionPerformed
    {//GEN-HEADEREND:event_dbcredentials_testconnection_buttonActionPerformed
        new Thread(new Runnable()
        {
            @Override
            public void run()
            {
                if(ConnectionTester.succsessfullconnection())
                {
                    JOptionPane.showMessageDialog(null, "successfully connected to Database!");
                }
            }
        }).start();
        
    }//GEN-LAST:event_dbcredentials_testconnection_buttonActionPerformed

    private void fetchfromdb_fetchdatafromtable_buttonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fetchfromdb_fetchdatafromtable_buttonActionPerformed
    {//GEN-HEADEREND:event_fetchfromdb_fetchdatafromtable_buttonActionPerformed
        if(fetchfromdb_tablename_textfield.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please provide a Table");
            return;
        }
        
        ReadFromDB readfromdb = new ReadFromDB(DBCredentials.HOST, DBCredentials.PORT, DBCredentials.DATABASE, DBCredentials.USERNAME, DBCredentials.PASSWORD);
        List<Object> datafromtable = readfromdb.fetchDataFromTable(fetchfromdb_tablename_textfield.getText().trim());
        readfromdb.closeconnection();
        if(datafromtable == null)
        {
            JOptionPane.showMessageDialog(null, "Could not fetch data from table " + fetchfromdb_tablename_textfield.getText().trim() + "\nPlease check your table name");
            return;
        }
        fetchfromdb_textarea.setText("DATA FROM TABLE " + fetchfromdb_tablename_textfield.getText().trim() + ":\n\n");
        for (int i = 0; i < datafromtable.size(); i++)
        {
            fetchfromdb_textarea.setText(fetchfromdb_textarea.getText() + datafromtable.get(i).toString() + "\n");
            fetchfromdb_textarea.setText(fetchfromdb_textarea.getText() + "------------------------------------------------------------------------------------------------\n\n");
        }
        
    }//GEN-LAST:event_fetchfromdb_fetchdatafromtable_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new GUI().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea db_csvpreview_textarea;
    private javax.swing.JTextField db_description_textfield;
    private javax.swing.JButton db_loadtodb_button;
    private javax.swing.JTextField dbcredentials_database_textfield;
    private javax.swing.JTextField dbcredentials_host_textfield;
    private javax.swing.JPanel dbcredentials_panel;
    private javax.swing.JTextField dbcredentials_password_textfield;
    private javax.swing.JTextField dbcredentials_port_textfield;
    private javax.swing.JButton dbcredentials_setcredentials_button;
    private javax.swing.JButton dbcredentials_testconnection_button;
    private javax.swing.JTextField dbcredentials_username_textfield;
    private javax.swing.JButton fetchfromdb_fetchdatafromtable_button;
    private javax.swing.JButton fetchfromdb_listtables_button;
    private javax.swing.JTextField fetchfromdb_tablename_textfield;
    private javax.swing.JTextArea fetchfromdb_textarea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton json_parse_from_radio_button;
    private javax.swing.JRadioButton json_parse_to_radio_button;
    private javax.swing.JButton load_data_startbutton;
    private javax.swing.JButton parseTab_start_button;
    private javax.swing.JLabel path_or_url;
    private javax.swing.JTextField path_or_url_textfield;
    private javax.swing.JButton write_to_file_button;
    private javax.swing.JTextField write_to_file_textfield;
    private javax.swing.JRadioButton xml_parse_from_radio_button;
    private javax.swing.JRadioButton xml_parse_to_radio_button;
    // End of variables declaration//GEN-END:variables
}
